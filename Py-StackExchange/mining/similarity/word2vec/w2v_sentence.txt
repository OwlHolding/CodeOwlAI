Why is char[] preferred over String for passwords?In Swing, the password field has a getPassword() (returns char[]) method instead of the usual getText() (returns String) method. Similarly, I have come across a suggestion not to use String to handle passwords.Why does Stringchar[].PreparedStatement IN clause alternatives?What are the best workarounds for using a SQL IN clause with instances of java.sql.PreparedStatement, which is not supported for multiple values due to SQL injection attack security issues: One ? placeholder represents one value, rather than a list of values.Consider the following SQL statement:Using preparedStatement.setString( 1, "'A', 'B', 'C'" ); is essentially a non-working attempt at a workaround of the reasons for using ? in the first place.  What workarounds are available?How to retrieve a file from a server via SFTP?I'm trying to retrieve a file from a server using SFTP (as opposed to FTPS) using Java. How can I do this?Difference between java.util.Random and java.security.SecureRandomMy team got handed over some server side code (in Java) that generates random tokens and I have a question regarding the same -The purpose of these tokens is fairly sensitive - used for session id, password reset links etc. So they do need to be cryptographically random to avoid somebody guessing them or brute force them feasibly. The token is a "long" so it is 64 bits long.The code currently uses the java.util.Random class to generate these tokens. The documentation ([http://docs.oracle.com/javase/7/docs/api/java/util/Random.html][1]) for java.util.Random clearly states the following: Instances of java.util.Random are not cryptographically secure. Consider instead using SecureRandom to get a cryptographically secure pseudo-random number generator for use by security-sensitive applications.However, the way the code is currently using java.util.Random is this - It instantiates the java.security.SecureRandom class and then uses the SecureRandom.nextLong() method to obtain the seed that is used for instantiating the java.util.Randomclass. Then it uses java.util.Random.nextLong() method to generate the token.So my question now - Is it still insecure given that the java.util.Random is being seeded using java.security.SecureRandom? Do I need to modify the code so that it uses java.security.SecureRandom exclusively to generate the tokens?Currently the code seed's the Random once at startupHow to solve slow Java `SecureRandom`?If you want a cryptographically strong random number in Java, you use SecureRandom. Unfortunately, SecureRandom can be very slow. If it uses /dev/random on Linux, it can block waiting for sufficient entropy to build up. How do you avoid the performance penalty?Has anyone used Uncommon Maths as a solution to this problem?Can anybody confirm that this performance problem has been solved in JDK 6?What is the meaning and difference between subject, user and principal?In the context of security frameworks, a few terms commonly occur subject, user and principal, of which I have not been able to find a clear definition and the difference between them. So, what exactly do these terms mean, and why are these distinctions of subject and principal needed?Encrypt Password in Configuration Files?I have a program that reads server information from a configuration file and would like to encrypt the password in that configuration that can be read by my program and decrypted.Requirments:Encrypt plaintext password to be stored in the fileDecrypt the encrypted password read in from the file from my programAny reccomendations on how i would go about doing this? I was thinking of writing my own algorithm but i feel it would be terribly insecure.Unit testing with Spring SecurityMy company has been evaluating Spring MVC to determine if we should use it in one of our next projects. So far I love what I've seen, and right now I'm taking a look at the Spring Security module to determine if it's something we can/should use. Our security requirements are pretty basic; a user just needs to be able to provide a username and password to be able to access certain parts of the site (such as to get info about their account); and there are a handful of pages on the site (FAQs, Support, etc) where an anonymous user should be given access.In the prototype I've been creating, I have been storing a "LoginCredentials" object (which just contains username and password) in Session for an authenticated user; some of the controllers check to see if this object is in session to get a reference to the logged-in username, for example. I'm looking to replace this home-grown logic with Spring Security instead, which would have the nice benefit of removing any sort of "how do we track logged in users?" and "how do we authenticate users?" from my controller/business code. It seems like Spring Security provides a (per-thread) "context" object to be able to access the username/principal info from anywhere in your app...... which seems very un-Spring like as this object is a (global) singleton, in a way.My question is this: if this is the standard way to access information about the authenticated user in Spring Security, what is the accepted way to inject an Authentication object into the SecurityContext so that it is available for my unit tests when the unit tests require an authenticated user?Do I need to wire this up in the initialization method of each test case?This seems overly verbose. Is there an easier way? The SecurityContextHolder object itself seems very un-Spring-like...How to limit setAccessible to only "legitimate" uses?The more I learned about the power of java.lang.reflect.AccessibleObject.setAccessible, the more astonished I am at what it can do. This is adapted from my answer to the question (Using reflection to change static final File.separatorChar for unit testing).You can do truly outrageous stuff:Presumably the API designers realize how abusable setAccessible can be, but must have conceded that it has legitimate uses to provide it. So my questions are:What are the truly legitimate uses for setAccessibleCould Java has been designed as to NOT have this need in the first place?What would the negative consequences (if any) of such design be?Can you restrict setAccessibleIs it only through SecurityManagerHow does it work? Whitelist/blacklist, granularity, etc?Is it common to have to configure it in your applications?Can I write my classes to be setAccessible-proof regardless of SecurityManagerOr am I at the mercy of whoever manages the configuration?I guess one more important question is: DO I NEED TO WORRY ABOUT THIS???None of my classes have any semblance of enforceable privacy what-so-ever. The singleton pattern (putting doubts about its merits aside) is now impossible to enforce. As my snippets above show, even some basic assumptions of how Java fundamental works is not even close to being guaranteed.ARE THESE PROBLEMS NOT REAL???Okay, I just confirmed: thanks to setAccessible, Java strings are NOT immutable.Am I the only one who thinks this is a HUGE concern?Keystore type: which one to use?By looking at the file java.security of my JRE, I see that the keystore type to use by default is set to JKS. Here, there is a list of the keystore types that can be used.Is there a recommended keystore type? What are the pros/cons of the different keystore types?How can I protect MySQL username and password from decompiling?Java .class files can be decompiled fairly easily. How can I protect my database if I have to use the login data in the code?JAAS for human beingsI am having a hard time understanding JAAS. It all seems more complicated than it should be (especially the Sun tutorials). I need a simple tutorial or example on how to implement security (authentication + authorization) in java application based on Struts + Spring + Hibernate with custom user repository. Can be implemented using ACEGI.How do you configure HttpOnly cookies in tomcat / java webapps?After reading Jeff's blog post on Protecting Your Cookies: HttpOnly. I'd like to implement HttpOnly cookies in my web application.How do you tell tomcat to use http only cookies for sessions?java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty on Linux, or why is the default truststore emptyWhen you google for this exception: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty, multiple results appear. However there is no definitive solution, only guesses.The problem arises (in my case at least) when I try to use open a connection over SSL. It works fine on my windows machine, but when I deploy it to the linux machine (with sun's jre installed) it fails with the above exception.The problem is that the default truststore of the JRE is empty for some reason (size of only 32 bytes, whereas it is 80kb on windows).When I copied my jre/lib/security/cacerts file from windows to linux, it worked fine.The question is - why is the linux jre having an empty trust store?Note that this happens on an Amazon EC2 instance, with the AMI linux, so it might be due to some amazon policies (I think java was pre-installed, but I'm not sure)How to obtain the location of cacerts of the default java installation?I am looking on how how to obtain the location of cacerts of the default java installation, when you do not have JAVA_HOME or JRE_HOME defined.I need a solution that works at least for OS X and Linux.Yes. java -v is assumed to work :)XSS prevention in JSP/Servlet web applicationHow can I prevent XSS attacks in a JSP/Servlet web application?How are SSL certificate server names resolved/Can I add alternative names using keytool?These may be phrased as separate questions for clarity, but they are all related to the same issue.How are SSL certificate server names resolved?Why do browsers seem to use the CN field of the certificate, but Java's mechanism seem to only look at "subject alternative names" only?Just a little background: I need to get a main server to communicate with several servers using HTTPS. Obviously, we don't want to buy SSL certificates for every server (there could be many), so I want to use self-signed certificates (I have been using keytool to generate them). After I add the certificates as trusted in the OS, the browsers (IE and Chrome) happily accept the connection as trusted. However, even after adding the certificates to Java's cacerts, Java still won't accept the connection as trusted and throws the following Exception:I found that I can make Java trust the certificate implementing my own HostNameVerifier, which I copied from here: com.sun.jbi.internal.security.https.DefaultHostnameVerifier just to test (by the way, the hostname passed as an argument to the HostnameVerifier is correct, so I think it should have been accepted).I have been using the certificate field CN as the hostname (usually the IP address).Can anybody please tell me if I am doing something wrong and point me in the right direction?Java Error: "Your security settings have blocked a local application from running"I'm trying to run this simple HelloWorld code written in Java from my browser (Chrome):I compiled it with NetBeans, and then I created a WebApplication project. The HTML code that runs the applet is:If run the applet from NetBeans it works. But when I run the HTML code by double clicking it, the following message pops up from the browser:Your security settings have blocked a local application from running. I tried with Internet&nbsp;Explorer and Firefox but nothing.This message started to appear after the last update of Java. Where is the problem?Handling passwords used for auth in source codeAssuming that I'm trying to pull from a RESTful api that uses basic authentication / basic certificates, what would be the best way to store that user name and password in my program?   Right now it's just sitting there in plaintext.Is there some way of doing this that is more security minded?ThanksSecuring a password in a properties fileI have a java application that connects to a database.here that there's a built in way to do it in C#.Edit Dec 12th 2012Why java.security.NoSuchProviderException No such provider: BC?The jar (bcprov-jdk16-145.jar) has been added to the project, Security.addProvider(new org.bouncycastle.jce.provider.BouncyCastleProvider()) has been added to the class, and BouncyCastleProvider.PROVIDER_NAME does return "BC" but AesFileIo.writeFile() still throws java.security.NoSuchProviderException No such provider: BC. Any ideas?Allowing Java to use an untrusted certificate for SSL/HTTPS connectionI've been working on a program to extract information from a dynamic web application, and the program worked fine until I set my tomcat server to use SSL using a self-signed(thus, untrusted) certificate. The stack trace of the error is:In a web browser, the user is prompted a warning when accessing a HTTPS site with an untrusted certificate, and asked to make an exception if he likes to proceed; I would like to implement a similar functionality for my command-line application... I admit that I am new to socket programming and networking in general; any advice solving this problem will be great!How can I protect myself from a zip bomb?I just read about zip bombs, i.e. zip files that contain very large amount of highly compressible data (00000000000000000...).When opened they fill the server's disk.How can I detect a zip file is a zip bomb before unzipping it?UPDATE Can you tell me how is this done in Python or Java?Create a mutable java.lang.StringIt's common knowledge that Java Strings are immutable. Immutable Strings are great addition to java since its inception. Immutability allows fast access and a lot of optimizations, significantly less error-prone compared to C-style strings, and helps enforce the security model.It's possible to create a mutable one without using hacks, namelyjava.lang.reflectsun.misc.UnsafeClasses in bootstrap classloaderJNI (or JNA as it requires JNI)But is it possible in just plain Java, so that the string can be modified at any time? The question is How?How to stop hack/DOS attack on web APIMy website has been experiencing a denial of service/hack attack for the last week.  The attack is hitting our web API with randomly generated invalid API keys in a loop.I'm not sure if they are trying to guess a key (mathematically impossible as 64bit keys) or trying to DOS attack the server.  The attack is distributed, so I cannot ban all of the IP address, as it occurs from hundreds of clients.My guess is that it is an Android app by the IPs, so someone has some malware in an Android app, and use all the installs to attack my server.Server is Tomcat/Java, currently the web API just responds 400 to invalid keys, and caches IPs that have made several invalid key attempts, but still needs to do some processing for each bad request.Any suggestions how to stop the attack?  Is there any way to identify the Android app making the request from the HTTP header?How do I create a Java sandbox?I want to make my application to run other people's code, aka plugins. However, what options do I have to make this secure so they don't write malicious code. How do I control what they can or can not do?I have stumbled around that JVM has a "built in sandbox" feature - what is it and is this the only way? Are there third-party Java libraries for making a sandbox?What options do I have? Links to guides and examples is appreciated!Are Java random UUID's predictable?I would like to use a cryptographically secure primary key for sensitive data in a database - this cannot be guessable/predictable and it cannot be generated by the database (I need the key before the object is persisted).I understand Java uses a type 4 UUID with a cryptographically secure random number generator, however I know the UUID isn't completely random so my question is how safe is it to assume that uuids cannot be predicted from a set of existing ones?How secure is using Maven?What are the risks and possibilities or scenarios whereby someone sets up masquerades of maven repositories and/or ip streams to provide masqueraded library copies of the original but injected with malicious or harmful code.What are the steps and practices to prevent such risks and possibilities?How can I ensure the destruction of a String object in Java?An empoyee at my company needs to modify data from a SQL Server database through a program I made. The program used Windows authentication at first, and I asked the DBAs to give this specific user write access to said database.They were not willing to do this, and instead gave write access to my Windows user account.Since I trust the guy but not enough to let him work 90 minutes with my session open, I'll just add a login prompt to my program, asking for a username and password combination, and log in to SQL Server with it. I'll log in, and trust my application to let him do only what he needs to.This, however, raises a small security risk. The password fields tutorial over SunOracle's site states that passwords should be kept the minimum amount of time required in memory, and to this end, the getPassword method returns a char[] array that you can zero once you're done with it.However, Java's DriverManager class only accepts String objects as passwords, so I won't be able to dispose of the password as soon as I'm done with it. And since my application is incidentally pretty low on allocations and memory requirements, who knows how long it'll survive in memory? The program will run for a rather long time, as stated above.Of course, I can't control whatever the SQL Server JDBC classes do with my password, but I hoped I could control what I do with my password.Is there a surefire way to destroy/zero out a String object with Java? I know both are kind of against the language (object destruction is non-deterministic, and String objects are immutable), and System.gc() is kind of unpredictable too, but still; any idea?Secure HTTP Post in AndroidI have a pretty basic helper class that I'm using to do all my Http Get/Post stuff.  I'm using HttpGet, HttpPost, and HttpClient from the org.apache.http library.  All of my stuff works fine over HTTP, but as soon as I tried to consume a service that works over HTTPS, I get a ClientProtocolException when executing the request.  The only message in the exception is "The server failed to respond with a valid HTTP response".To test, I sent the exact same payload from a browser using a simple html form and Fiddler2 using the RequestBuilder.  I've sent invalid and empty payloads and even sent all of the above with and without headers to see if there was something funky about the way the objects were building the request.Everything I've used in testing gives me a valid 200 status HTTP response.  The service just gives me a structure describing the error if I give it something other than what it expects.Is there something special I need to add to the HttpPost or HttpClient object(s) to tell it to use HTTPS?  Do I have to explicitly tell it to use a different port?EDIT:I indeed registered the wrong socket factory for https communication.  Here is the updated method that I use to create my HttpClient object with the correct socket factory just in case someone searches this kind of problem in the future:How to implement SAML SSOHow is SAML SSO typically implemented?I've read this (n.b. obsolete) about using SAML with Google Apps, and the wikipedia entry on SAML.The wikipedia entry talks about responding with forms containing details of the SAMLRequest and SAMLResponse. Does this mean that the user has to physically submit the form in order to proceed with the single sign on?The google entry talks about using redirects, which seems more seemless to me. However, it also talks about using a form for the response which the user must submit (although it does talk about using JavaScript to automatically submit the form).Is this the standard way of doing this? Using redirects and JavaScript for form submission?Does anyone know of any other good resources about how to go about implementing SSO between a Windows Domain and a J2EE web application. The web application is on a separate network/domain. My client wants to use CA Siteminder (with SAML).How do I generate a SALT in Java for Salted-Hash?I've been looking around and the closest answer is : How to generate a random alpha-numeric string?I want to follow this workflow according to this CrackStation tutorial: To Store a PasswordGenerate a long random salt using a CSPRNG.Prepend the salt to the password and hash it with a standard cryptographic hash function such as SHA256.Save both the salt and the hash in the user's database record.To Validate a PasswordRetrieve the user's salt and hash from the database.Prepend the salt to the given password and hash it using the same hash function.Compare the hash of the given password with the hash from the database. If they match, the password is correct. Otherwise, the password is incorrect.I don't know how to generate a SALT. I figured out how to generate a hash using the MessageDigest. I tried using SecureRandom but nextByte method produces garbled code.Edit: I don't know which answer to choose, they're too complicated for me, I have decided to use jBCrypt; jBCript is easy to use, does all the complex stuff behind the scenes. so I'll let the community vote up for the best answer.Java security: how to clear/zero-out memory associated with an object? (And/or ensure that is the only instance/copy of a particular variable)I'm in a discussion at work over how to secure sensitive information (e.g. passwords) stored in a Java program.  Per security requirements, memory containing sensitive information is cleared, e.g. by setting the values of the bytes to all zeroes.  The concern is that an attacker can observe the memory associated with the application process, and so we want to limit as much as possible the window of time such sensitive information hangs around.  Previously, projects involved C++, so a memset() sufficed.(Incidentally, the use of memset() has been called into question because some compilers are known to optimize it's use out of the resulting binary based on the assumption that, since the memory is not used later, there is no need to zero it in the first place.  This blurb is a disclaimer for those who Google for "memset" and "clear memory", etc).Now we have on our hands a Java project being pressed against this requirement.For Java objects, my understanding is that:a nulled reference only changes the value of the reference; the memory on the heap for the object still contains dataan immutable object like String would not be able to have it's data modified (or at least not easily, within the confines of a VM with an appropriately enabled security manager)the generational garbage collectors may make copies of objects all over the place (as noted here)And for primitives, my understanding is that:a primitive-type variable in a local method would get allocated on the stack, and:when you change it's value, you modify it directly in memory (as opposed to using a reference to handle an object on the heap). copies can/would be made "behind the scenes" in some situations, such as passing it as an argument into methods or boxing (auto- or not) creating instances of the wrappers which contain another primitive variable holding the same value.My coworker claims that Java primitives are immutable and that there is documentation from both the NSA and Oracle regarding the lack of support in Java for this requirement.My position is that primitives can (at least in some situations) be zeroed by setting the value to zero (or boolean to false), and the memory is cleared that way.I'm trying to verify if there's language in the JLS or other "official" documentation about the required behavior of JVMs when it comes to memory management with respect to primitives.  The closest I could find was a "Secure Coding Guidelines for the Java Programming Language" on Oracle's site which mentions clearing char arrays after use.I'd quibble over definitions when my coworker called primitives immutable, but I'm pretty sure he meant "memory cannot be appropriately zeroed" - let's not worry about that.  We did not discuss whether he meant final variables - from context we were talking in general.Are there any definitive answers or references on this?  I'd appreciate anything that could show me where I'm wrong or confirm that I'm right.Edit: After further discussion, I've been able to clarify that my coworker was thinking of the primitive wrappers, not the primitives themselves.  So we are left with the original problem of how to clear memory securely, preferably of objects.  Also, to clarify, the sensitive information is not just passwords, but also things like IP addresses or encryption keys.Are there any commercial JVMs which offer a feature like priority handling of certain objects?  (I imagine this would actually violate the Java spec, but I thought I'd ask just in case I'm wrong.)InvalidKeyException : Illegal Key Size - Java code throwing exception for encryption class - how to fix?I've been trying to get some working Java code to use for encrypting Paypal buttons. This is no easy task! Even when I get some code, from Paypal, I'm faced with errors..ugh..So here is what I have so far, that I think will work eventually.I downloaded the Java.zip file from Paypal's website. Within it are two classes - ClientSide.java and ButtonEncryption.javaThe Problem - I'm getting an InvalidKeyException : Illegal key size error.QuestionsClientSide classButtonEncryption classEdited : info about keys/certificatesPrivate KeyPublic CertificateCreated PKCS12 FileEdited - adding compilation warnings - BouncyCastleJCE policy file installation stepsThese are the steps I took to installing the JCE Unlimited Strength Policy files:Java JCE Download Page on Oracle.Edit 6/23/2011 - results after further configurationI went to Bouncy Castle page at http://www.bouncycastle.org/specifications.html#install5.0 Bouncy Castle Provider then read info under 5.1 Example. It makes mention of adding a parameter for the Bouncy Castle Provider to the java.security file. My file is under C:\Java\jdk1.6.0_22\jre\lib\security.security.provider.10=org.bouncycastle.jce.provider.BouncyCastleProvider Now after making these changes, recompiling and attempting to execute ClientSide.java I'm given the same exception : but maybe the focus should be on the part of the exception where it says this about bouncycastle provider -@PeteyB - I'm certain that I installed the policy files correctly. Based on what I've stated here, is there anything else you can suggest I try? Can you look at the Bouncy Castle site @ http://www.bouncycastle.org/specifications.html#install and see if there is something I'm missing?How to make a machine trust a self-signed Java applicationI'm deploying an application using JAWS, and it worked until late 2013 when I got a warning, and then this morning Java completely blocked it. The message in French is:Application bloquée par les paramètres de sécuritéVos paramètres de sécurité ont bloqué l'exécution d'une application auto-signée avec une version obsolete ou arrivée à expiration de Java.which would translate roughly as:Application blocked by the security settingsYour security settings have blocked from running an application that has been self-signed with an obsolete or outdated Java.The grammar is not that clear, the end of the sentence could be read as either:...blocked a self-signed application from running with an obsolete or outdated Java [runtime], meaning that the local runtime is too old, but the self-signature is fine...blocked an application that has been self-signed with an obsolete or outdated Java [compiler], meaning that the Java compiler used is too oldI searched online for the exact same message in English, but I couldn't find it. So the grammar is still unclear. Note that on the message there is no Name: xyz / From: http://url/, there's only the text I typed above, and a blue "i" icon.Now, I don't really understand the exact meaning of this error message, but I know that there is an issue because my JAR files are all self-signed. I have already faced this on other Windows clients, and it was easy:I extracted a .cer certificate from my keystore;Downloaded it on the client machine, open it;Made the customers install it as a trusted source on their local machine.It worked like a charm on my test setup and for one customer, but another one still has the issue and cannot run my software.This is a big issue from me, and I don't know what to do. Should I upgrade my Java compiler, recompile everything, sign every JAR file again and cross fingers? How can I make that Windows box trust my certificate and let the Java application run?Spring MVC - Checking if User is already logged in via Spring Security?I have a Spring MVC application.It uses its own custom Login page. Upon successful login, a 'LOGGED_IN_USER' object is placed in the HTTPSession.I want to allow only authenticated users to access URLs. I know i can achieve this by using a web filter. But, This part i want to do using Spring Security (my check will remain the same - look for 'LOGGED_IN_USER' object in HTTPSession, if present you are logged in).My constraint is i cannot change Login behavior at present - that will not use Spring Security yet.What aspect of Spring Security can i use to achieve this part alone - check if the request is authenticated (from logged in user)?What's the best way to defend against a path traversal attack?I have a Java server implementation (TFTP if it matters to you) and I'd like to ensure that it's not susceptible to path traversal attacks allowing access to files and locations that shouldn't be available.  My best attempt at defending so far is to reject any entries that match File.isAbsolute() and then rely on File.getCanonicalPath() to resolve any ../ and ./ components out of the path.  Finally I ensure that the resulting path is still within the required root directory of my server:Are there security issues that this misses? Are there better / faster to achieve the same result reliably?The code needs to work consistently across Windows and Linux.Prevent XXE Attack with JAXBRecently, we had a security audit on our code, and one of the problem is that our application is subject to the Xml eXternal Entity (XXE) attack.Basically, the application is a calculator that receives inputs as XML, through a Web-Service.Here is an example of such an XXE attack on our application:As you can see, we can refer to an entity that points to an external file ("file:///d:/").Regarding the XML input itself (the &lt;calcinput&gt;...&lt;/calcinput&gt; part) is unmarshalled with JAXB (v2.1). The web-service part is based on jaxws-rt (2.1).What do I need to do to secure my web-service?Using Apache httpclient for httpsI have enabled https in tomcat and have a self-signed certificate for server auth. I have created an http client using Apache httpClient. I have set a trust manager loading the server certificate. The http client can connect with server no problem. To see what is going on I enabled debugging:  I saw the following which I can not understand at all:  My certificate is displayed and is added to truststore (as I see). Then:  Here is the part from debugging traces I do not get:  It seems that it also uses the default java trust store! My question is why does this happen? In my code I specify explicitly a specific trust-store to use (via truststoremanagers). I was expecting only this to be used. It seems that both my truststore and java's default is being used. Is this how it is supposed to work?  UPDATE:I thought that I should see 2 trust managers, since 2 keystores (mine and java's default appear to be used).UPDATE2:  As you see in the code bellow I specify my keystore.My expectation is that only this should be used (not this and cacert as well)Does not make sense to me.Application vulnerability due to Non Random Hash FunctionsBelow excerpt is from an article that explains possibility of Denial Of Service(DoS) attack because of non random hash functions used in Hash Data Structures. […] the condition can be leveraged by exploiting predictable collisions in the underlying hashing algorithms.In order to verify it I went through reference implementation of Java HashMap from Oracle and indeed found a static hash functions used: Another paper on the topic tells:How can we safeguard against this vulnerability. Moreover so with so many of softwares we use being open source (Tomcat etc.) which rely on this implementation.Java and SSL - java.security.NoSuchAlgorithmExceptionI've built a Java program as a front end for a database on a server, and I'm trying to use SSL to encrypt traffic between clients and the server.  Here is the command I issued to create the server certificate:Here is the relevant code:When I try to run this, I catch this:java.security.NoSuchAlgorithmException: Error constructing implementation (algorithm: Default, provider: SunJSSE, class: com.sun.net.ssl.internal.ssl.DefaultSSLContextImpl)I've also found that the "KeyPairGenerator" service has algorithms DIFFIEHELLMAN, DSA, RSA available to it, while "SSLContext" has algorithms SSL, TLS, SSLV3, DEFAULT, TLSV1.Do I need to find some way to install RSA into the SSLContext service?  Am I even looking at the correct services?  Should I not be using RSA?I'm new to the whole SSL - Security - Certificates thing, and it just blows me away that each of these different services don't have the same algorithms when they are supposed to be accessing the same certificates.Android RSA Keypair Generation - Should I use Standard Java/Bouncy Castle/Spongy Castle/JSch/Other?I've been looking around for about a week+ to implement a method I have in mind. I have came across (and read) many articles on all of these different methods, but I am still left confused, so I was hoping maybe someone can spread their knowledge of these topics so I can more easily go about creating my sought after method and implementing it in Android.My "sought after" method:Must generate RSA Public &amp; Private keysPublic must have PKCS#1 paddingMust be RSA 2048Return Public Key in Byte arrayApparently you can go about it four ways:Standard JavaBouncy CastleSpongy Castle (Android Friendly?)JSchSince I'm very new to security and Java as a whole I was wondering if someone could finally give a good clear cut explanation of all of this.Below are the ways I have tried to implement my sought after method (mentioned above) in the 4 different programming methods. If I don't know something it's because I can't figure out through the respective documentation. Please feel free to correct me.1. Standard Java (Not sure if PKCS#1):2. Bouncy Castle (Not yet functional =/ Ideas?):3. SpongyCastle (Havn't started it/Same as Bouncy Castle?):4. JSch (Very Dis-functional/Work in progress)I'd like this to really become more of a resource for anyone that has problems with RSA key generation in Android (like I, and many others have had).I feel that Bouncy Castle has very little information about it's API which makes it extremely difficult for a beginner (like me) to understand it. From my research, people use Bouncy Castle in Java instead of the built-in security provider because Bouncy Castle is much more robust. Using Bouncy Castle in Android is not desired because it "ships with a crippled version of Bouncy Castle" which may be prone to errors. Spongy Castle is simply a repackage of Bouncy Castle.To this end, I will ask my final question of, which method should be used for Android?UpdateI hope someone can answer this later on. As for what I did to solve my problem was to just use NDK.SAML simple example for beginnersI am beginner to the SAML v2.0 technology and I get the theory knowledge but I didn't find any examples on Google. Can anybody provide me with a step by step example for simple "SAML for v2.0".Upto now I've gone through the theory part,i.e.., it support Single sign on andService provider and Identity Provider   .Presently I am working on Linux EnvironmentI need basic example in step by step manner how the request is moving from Service Provider and how to configure the environment .Is it possible to execute the example for the SAML v2.0Is their any chance to execute SAML example in Java language,If it possible you canWhen should AccessController.doPrivileged() be used?If I understand AccessController.doPrivileged correctly, it is saying that untrusted code should be able to invoke methods requiring permissions (such as System.getProperty()) through an intermediate method that does have permissions.That brings up the question: when should AccessController.doPrivileged() be used? When should untrusted code be allowed to invoke privileged code through intermediate methods? When should it fail?Following your reasoning, please explain why ClassLoader creation should always be allowed: http://findbugs.sourceforge.net/bugDescriptions.html#DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGEDJava Best Practices to Prevent Cross Site ScriptingI have gone through the OWASP top ten vulnerabilities and found that Cross-Site Scripting is the one we have to take notes. There was few way recommended solutions. One has stated that Do not use "blacklist" validation to detect XSS in input or to encode output. Searching for and replacing just a few characters (&lt; and &gt; and other similar characters or phrases such as script) is weak and has been attacked successfully. Even an unchecked “&lt;b&gt;” tag is unsafe in some contexts. XSS has a surprising number of variants that make it easy to bypass blacklist validation. Another solution said that Strong output encoding. Ensure that all user-supplied data is appropriately entity encoded (either HTML or XML depending on the output mechanism) before rendering. So, which is the best way to prevent cross site scripting to validate and replace the input or encoding the output ?What is the difference between a PKCS12 keystore and a PKCS11 keystore?I'm interested in Java-NSS libraries, and I'm reading the Sun's P11 Guide. I am confused on the following:What is the difference between using a PKCS12 keystore and a PKCS11 keystore?A keystore is just a keystore, right? Are there some differences? Can they be used interchangeably in any aspect?Do java's Inner classes pose a security risk?Recently the security team on my project released a secure code guidelines document, designed to be used as part of our code reviews. The first thing that struck me was an item that said "Do not use Inner classes". I thought this seemed like a very heavy handed and sweeping statement. Inner classes are good if used correctly right?, but i did a bit of googling and found this, quoted here for convenience.Rule 5: Don't Use Inner ClassesMy questions areDoes this behaviour still exist in java 5 / 6?Is this actually a security risk, given that any class, other than the outer and inner classes, that tried to access the outer class' private members would not compile?Does it pose enough of a security risk to warant the 'guideline' 'Do not use inner classes'?Error Importing SSL certificate : Not an X.509 CertificateI am trying to Update the SSL certificate in accordance  with this postI am noob in certificates, so i followed this guide. But, when i enter I get the error:How do i fix this?Error Importing SSL certificate : Not an X.509 CertificateI am trying to Update the SSL certificate in accordance  with this postI am noob in certificates, so i followed this guide. But, when i enter I get the error:How do i fix this?Is there any reason I shouldn't store my keystore in version control?I'm using a keystore (.jks) to store the certificate I use to sign my Android applications. The Android documentation and community have impressed on me the importance of never losing this file, but I haven't found any guidance on where I should keep it.Would storing it in Git be a terrible idea (i.e. would it have security consequences)?Assume that the keystore itself and the private keys inside both have strong passwords on them.Algid parse error, not a sequenceWhen trying to read a RSA private key from a file using the methodI get the exceptionat the fac.generatePrivate(privKeySpec) call.What does this error mean?ThanksDmitriplayframework owasp top 10I'm thinking about using Play for a large-scale project, so, has anyone battle-tested Play framework for OWASP Top 10?  Are there any security problems you know of in Play framework?HttpServletRequest.getRemoteUser() vs HttpServletRequest.getUserPrincipal().getName()These two seem to be doing the same things. Can anyone explain the main difference between the two?  When would you use one vs the other?  HttpServletRequest.getRemoteUser()HttpServletRequest.getUserPrincipal().getName()Does my JDBC connection to the database use SSL or not?How can one know if the JDBC connection to an SQL server is secure (i.e. uses SSL) or not?  Is it obvious for example from the URL. Do all JDBC drivers support SSL connections to the database server, or does the use of SSL just depends on the specific database vendor?Java AES/GCM/NoPadding - What is cipher.getIV() giving me?I'm using AES/GCM/NoPadding encryption in Java 8 and I'm wondering whether my code has a security flaw.  My code seems to work, in that it encrypts and decrypts text, but a few details are unclear.My main question is this:Does that IV satisfy the requirement of "For a given key, the IV MUST NOT repeat." from RFC 4106?I'd also appreciate any answers / insight for my related questions (see below), but that first question is bugging me the most.  I don't know where to find source code or documentation that answers this.Here is the full code, roughly.  I apologize in case I introduced errors while writing this post:Suppose that users cracking my secret key = game over.More detailed questions / related questions:Is the IV returned by cipher.getIV() safe for me to use in this way?Does it avoid the catastrophe of reusing the IV,key combination in Galois/Counter Mode?Is it still safe when I have multiple applications running this code at once, all displaying encrypted messages to users from the same src data (possibly in the same millisecond)?What's the returned IV made of?  Is it an atomic counter plus some random noise?Do I need to avoid cipher.getIV() and construct an IV myself, with my own counter?Is the source code implementing cipher.getIV() available online somewhere, assuming I'm using Oracle JDK 8 + JCE Unlimited Strength extension?Is that IV always 12 bytes long?Is the authentication tag always 16 bytes (128 bits) long?With #2 and #3, and the lack of padding, does that mean my encrypted messages are always 12 + src.length + 16 bytes long?  (And so I can safely squish them into one byte array, for which I know the correct length?)Is it safe for me to display an unbounded number of src data encryptions to users, given constant src data that the users know?Is it safe for me to display an unbounded number of src data encryptions to users, if the src data is different every time (e.g. including System.currentTimeMillis() or random numbers)?Would it help if I padded the src data with random numbers before encryption?  Say 8 random bytes in front and back, or only on one end?  Or would that not help at all / make my encryption worse?(Because these questions are all about the same block of my own code, and they are strongly related to each other, and others might/should have the same set of questions when implementing the same functionality, it felt wrong to split the questions into multiple posts.  I can re-post them separately if that is more appropriate for StackOverflow's format.  Let me know!)Android encryptionI am working on an android application, and I need to use encryption for one aspect of it. I am really indifferent to which algorithm I use (AES, DES, RSA, etc...). I am aware that Java has a crypto package, but I am not familiar with it at all. Can someone post an example on how to do an encrypt/decrypt function?Guide to proper escaping in Play frameworkI'm trying to map out how the Play framework supports escaping.https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_SheetSo I'm trying to relate that to Play template features and fully understand what Play does and doesn't do.HTML escaping: ${} or the escape() functionAttribute escaping: I can't find a built-in solutionJavaScript escaping: there's an escapeJavaScript() http://www.playframework.org/documentation/1.2/javaextensionsCSS escaping: I can't find a built-in solutionURL escaping: nothing special built-in, but usual Java solution e.g. Java equivalent to JavaScript&#39;s encodeURIComponent that produces identical output?  - Update: there's urlEncode() at http://www.playframework.org/documentation/1.2/javaextensionsAnother point of confusion is the support for index.json (i.e. using templates to build JSON instead of HTML). Does ${} magically switch to JavaScript escaping in a JSON document, or does it still escape HTML, so everything in a JSON template has to have an explicit escapeJavaScript()?There's also an addSlashes() on http://www.playframework.org/documentation/1.2/javaextensions , but it doesn't seem quite right for any of the situations I can think of. (?)It would be great to have a thorough guide on how to do all the flavors of escaping in Play. It looks to me like the answer is "roll your own" in several cases but maybe I'm missing what's included.HTTP Basic Authentication instead of TLS client certificationThe answer below is from this question;The awarded answer doesn't actually address the question at all. It only mentions SSL in the context of data transfer and doesn't actually cover authentication.You're really asking about securely authenticating REST API clients. Unless you're using TLS client authentication, SSL alone is NOT a viable authentication mechanism for a REST API. SSL without client authc only authenticates the server, which is irrelevant for most REST APIs.If you don't use TLS client authentication you'll need to use something like a digest-based authentication scheme (like Amazon Web Service's custom scheme) or OAuth or even HTTP Basic authentication (but over SSL only).So considering I will use HTTPS without client certificationclient SSL certification server does not really know whom its talking to. What I understand here is if I use a authentication-token to access to authenticate the client against the server. Then server does not know whom is sending the token even if that token is paired  with a user id in my servers database.First of all 1-is this a real problem? If I especialy use Https?(without TLS client authentication)2- and most important, assuming that is an important security flaw; How can Http basic authentication help here as poster mentioned? Http basic authentication just sends encoded username password in a header. So when client receives a token (in return after he sends his username password) then for the rest of his requests he will use this token in this header instead of password, and everything is fine all of a sudden?Still Server does not know from where the request is coming from, maybe server has a valid token with a matched user in its database but unknown who reallysendWhenever I bring this subject I get replies.."Well..you send a token but server does not know whom send the token, not very secure" so I understand this as the browser keeps a sort of auth-certification and server knows where the request is coming from the right place THEN I can be sure that the paired user with that token (checked from my DB)is "really correct"  Or maybe what am telling here is not correctWhy does JPasswordField.getPassword() create a String with the password in it?Swing's JPasswordField has the getPassword() method that returns a char array. My understanding of this is that the array can be zeroed immediately after use so that you do not have sensitive things hanging around in memory for long. The old way to retrieve the password was to use getText(), which returns a String object, but it has been deprecated.So, my question is why it is actually being used by Java during the retrieval process using getPassword()??? To be clearer, I was debugging my test app for something else**, I followed the calls and bang... getText() in JPasswordField was called and, of course, a nice String object with my password has been created and now is hanging around the memory.Try it for yourself:Follow up question: is this 'hidden' use of getText() dangerous in any way? Of course a dedicated attacker WILL get your password if it has compromised the system, I am talking about a less dedicated one ;)**I came across this while I was looking for a way to actually display some sensitive data on a Swing component without using a String object. Apparently there is no way to do it unless I am willing to rewrite part (all?) of the Swing API.. not gonna happen.How do I access private methods and private data members via reflection?I know that we can access private constructor via reflection as @Sanjay T. Sharma mentioned in his answer of my question: Does “instanceof Void” always return false?However, @duffymo said:you can access private everything with reflection - methods, constructors, data members, everything.How can I access the private methods and the private data members?Is it possible to access local variable via reflection?Is there a way to prevent anyone from accessing private constructors, methods, and data members?Web Application - Authentication / Login FrameworkIs there an out of the box frameworks (Drupal, Liferay, Tapestry with Tynamo, Wicket ??) that I can use to wrap my application which can be a bunch of JSP's or HTML's with JS? I know I'm asking a very simple and maybe a naive question. But this is a topic every web developer guru will go thru. Any help, advise and pointers much appreciated.Glassfish 3 security - Form based authentication using a JDBC RealmI  want to understand form based security and JDBC realms with glassfishV3, so i decided to create a little app that just allows to sign in and out, i followed the instructions from this book to do so. I understand how the hold thing works, but something is wrong and i cant get it to work properly.What i did first was create a little database with JPA annotations:Here the other table that holds the roles for each userWhen the DB was ready i added some data manuallyThe next step was to configure a security realm.Then added the security configuration to my web.xml fileMy objectives here were:administrators can see all pagesvisitors can see only index.xhtml and visitorpanel.xhtmlusers can see index.xhtml,visitorpanel.xhtml and userpanel.xhtmlI think the configuration is correct.Finally the last step was to create the login form in the index.xhtml page:The program builds fine, but i have the following problems:1- When i try to login as user or as administrator(visitors don't need to login), i get redirected to the error.xhtml page and in the console i see an exception:3- Also i am curious why i cant use the tag h:form instead of just form, when i implement the login?Ill really appreciate some help, ive been a few hours reading the first chapters of the book and trying to implement, my own example but i got stuck. I think i am close to the solution.UpdateI changed the Default principal to be the visitors user name. But it still don't workAnd i also added some more options to my Realm configurationBut when i try to login i still see an exception that says:I still don't know what is missing.-Could it be that the table name should not be upper case?-Could it be that the columns names should not be upper case?-Could it be that the tables are created wrong?-Could it be that i cant use PASSWORD as a column name, because it makes some kind of conflict?I really don't understand why that exception. I pinged the database from the admin panel, and all seem to be correct.Can someone help me figuring this one out? Update 2I changed the 'javax.enterprise.system.core.security' logging option to level FINE, to have more information when exceptions occur, this was the result when i tried to login:Update 3I don't have much properties, maybe something is missing?Also now i created a JDBC resource, that looks like this:(The JNDI name in the Realm, was changed to jdbc/studydb)My persistence.xml looks like this:I think i made some progress, now the exception i see is:Update 4I changed the database, it was wrongly organized so i made some changes in my entities://GET &amp; SET METHODSSo i had also to edit the DBRealm, now it looks like this:But when i login i get again an exception:Free tools for managing java keystores and security certificatesWhat are competitive free tools for managing java keystores and security certificates?Thanks.Which SHA-256 is correct? The Java SHA-256 digest or the Linux commandline toolWhen I calculate in Java an SHA-256 of a string with the following method I get :on the commandline I do the following (I need the -n to not add a newline) :and getif we compare these more closely I find 2 subtle differencesor :Which of the 2 is correct here?Result: Both are but I was wrong...fixed it by using :Thanks!How to check if class exists somewhere in package?I'm currently dealing with a particular issue with my paid application.  Internally it contains a licensing check.  The app is patched by hackers by modifying the app apk/jar.  They are adding a new class which helps bypass the licensing check.My goal is to somehow check for this particular patch.  If I find it I know my app has been compromised.  Any tips on how to know that something has been modified on the package?  Doing a hash over the app is not really an option in my case.  I thought maybe checking if this class exists would help, but what if they change the name of the class? Then, another idea is somehow check for unexpected includes added to the class.Any of these possible? Any suggestions would help :)Forcing Tomcat to use secure JSESSIONID cookie over httpIs there a way to configure Tomcat 7 to create JSESSIONID cookie with a secure flag in all occasions? Usual configuration results in Tomcat flagging session cookie with secure flag only if connection is made through https. However in my production scenario, Tomcat is behind a reverse proxy/load balancer which handles (and terminates) the https connection and contacts tomcat over http.Can I somehow force secure flag on session cookie with Tomcat, even though connection is made through plain http?How can I construct a java.security.PublicKey object from a base64 encoded string?I have a bse64encoded string Public key from external source (Android Store) and I need to use it to verify signed content. How can I convert the string into an instance of the java.security.PublicKey interface. I am on Java 6 if that makes a difference. The key is (probably) generated using standard java lib and not bouncy castle (its from a remote team so I am not sure). Their sample code says to use Security.generatePublicKey(base64EncodedPublicKey); but the Security object in standard java has no such method.Protect string constant against reverse-engineeringI have android application that has hard coded (static string constants) credentials (user/pass) for sending emails via SMTP.The problem is that .dex file in .apk can be easily reverse-engineered and everybody can see my password.Is there a way how to secure these credentials, while i will still be able to use them in my classes?Is there a way to load a different cacerts than the one specified in the java_home/jre/lib/security folder?I have a single installation of java in a system that runs 2 or 3 applications. All the applications use the same runtime.Is there a way to specify a different keystores for the ca certs than the one in java_home/jre/lib/security. That is, is there an option to specify an "extra" keystore that is loaded and added to the certs loaded from java_home/jre/lib/security/cacerts?What I want to avoid is having to re-import our local ca every time I upgrade the jdk in the box.Is there a way to load a different cacerts than the one specified in the java_home/jre/lib/security folder?I have a single installation of java in a system that runs 2 or 3 applications. All the applications use the same runtime.Is there a way to specify a different keystores for the ca certs than the one in java_home/jre/lib/security. That is, is there an option to specify an "extra" keystore that is loaded and added to the certs loaded from java_home/jre/lib/security/cacerts?What I want to avoid is having to re-import our local ca every time I upgrade the jdk in the box.Can you sign a Java applet but keep it in the sandbox (NOT give it full access to user's computer)?Thanks to Oracle's latest changes, it appears I have to sign an applet even though I don't need or want it to have unrestricted access to the user's computer (which is why its currently unsigned). In particular, I don't want the warning they show for signed applets:This application will run with unrestricted access which may put your computer and personal information at risk....which will scare the people using it.Is it possible to sign an applet but mark it in some way to say "but keep using the sandbox"?The only reason I'm signing it is that as of Version 7, Update 40, Oracle has further increased the nagging users have to deal with when running unsigned applets. It used to be that you could check a box saying you trusted an applet once, and that would be remembered. As of Update 40, it's only remembered for that browser session; the warning reappears if you close the browser and come back later. They've also said they're going to disable unsigned applets entirely in "a future version" of the Java plug-in.bouncycastle + JBoss AS7: JCE cannot authenticate the provider BCI use BouncyCastle for encryption in my application. When I run it standalone, everything works fine. However, if I put it in the webapp and deploy on JBoss server, I get a following error:Here is a part of the code that causes this error:And maven dependency:Do you know how could I deploy it?How to restrict developers to use reflection to access private methods and constructors in Java?How to restrict developers to use reflection to access private methods and constructors in Java?Using normal Java code we can't access private constructors or private methods outside of a class. But by using reflection we can access any private methods and constructors in a Java class.So how can we give security to our Java code?What is the best practice for securely storing passwords in JavaWhat would be the recommended way for storing passwords in a Java desktop application?I want the user to have the ability to enter the credencials only once and not be prompted again.On personal projects I've been using the Preferences API, but I'm assuming this is no different than storing it in plain text (security wise).Many thanksEDIT:Many thanks for your suggestions. There seems to be some confusion, no doubt because I might have not made the question very clear...I'll give an hypotetical scenario:Say I'm creating a simple front-end for a remote database which creates a connection string with username/password. Normally the user would be prompted to enter the username/password combination each time the application starts.What would be the best way to store that password in the user's machine, without the need to re-enter it (connecting automatically upon application start). A kind of "remember me" functionality (which I know in itself is not a very good practice...)EDIT2:Saving certificate chain in a pkcs12 keystoreThe following code: where certChain holds the end certificate and the issuer certificate (i.e. two certificates),PKCS12.  It does save both certificates if the keystore type is PKCS12-3DES-3DESEDIT: Here's an SSCCE. This works fine with "JKS", fails with "PKCS12": Only the first certificate in the chain is accessible via getCertificateChain(String). The saved file can be opened with openssl pkcs12 revealing both certificates.How to hash a password with SHA-512 in Java?I've been investigating a bit about Java String encryption techniques and unfortunately I haven't find any good tutorial how to hash String with SHA-512 in Java; I read a few blogs about MD5 and Base64, but they are not as secure as I'd like to (actually, Base64 is not an encryption technique), so I prefer SHA-512.AccessController usageKindly help me to get a clear picture ofExploitable Java functionsThis question is similar to Exploitable PHP Functions.Tainted data comes from the user,  or more specifically an attacker.  When a tainted variable reaches a sink function,  then you have a vulnerability.  For instance a function that executes a sql query is a sink,  and GET/POST variables are sources of taint. What are all of the sink functions in the Java class library (for any flavor of Java)?  I am looking for functions that introduce a vulnerability or software weakness.  I am particularly interested in Remote Code Execution vulnerabilities.  Are there whole classes/libraries that contain nasty functionally that a hacker would like to influence?   How do people accidentally make dangerous Java code?how to securely store encryption keys in android?I want to know how to securely store encryption key in Android? What is the best scenario to protect encryption and secrete keys?Is UUID.randomUUID() suitable for use as a one-time password?As previous discussed, confirmation emails should have a unique, (practically) un-guessable code--essentially a one-time password--in the confirmation link. The UUID.randomUUID() docs say: Does this imply that the the UUID random generator in a properly implemented JVM is suitable for use as the unique, (practically) un-guessable OTP?Implement signature-level security on Android services with more than one allowed signatureI'm developing on an application at the moment which contains quite a lot of personal user information - things like Facebook contacts, etc ... Now, one of the things I want to be able to do (and have done, quite effectively) is open up parts of the application to "3rd Party" applications, using Android's build-in inter-process communication protocol (AIDL). So far so good.Here's the catch: because we're involved in handling quite a lot of personal information, we have to be quite careful about who can and can't access it; specifically, only "Trusted" applications should be able to do so. So the natural way to do this is to use a custom permission within the AndroidManifest.xml file where we declare the services. My problem is this: I want to be able to enact signature-level protection (similar to the normal "signature" permission level), but with a bit of a catch:I don't only want application signed with our internal signature to be able to access the services. I'd like to be able to build a list of "trusted signatures" &amp; at runtime (or if there's a better way, then maybe some other time?) be able to check incoming requests against this list of trusted keys.This would satisfy the security constraints in the same way as the normal "signature" permission level I think - only programs on the "trusted keys list" would be able to access the services, and keys are hard to spoof (if possible at all?) - but with the added bonus that we wouldn't have to sign every application making use of the APIs with our internal team's key.Is this possible at the moment in Android? And if so, are there any special requirements?ThanksIs a good idea to enable jmx (lambda probe) on a production server?We are experiencing some slowdowns on our web-app deployed on a Tomcat 5.5.17 running on a Sun VM 1.5.0_06-b05 and our hosting company doesn't gives enough data to find the problem.We are considering installing lambda probe on the production server but it requires to enable JMX (com.sun.management.jmxremote) in order to obtain memory and CPU statistics.Does enabling JMX incur a serious performance penalty?If we enable JMX, are we opening any security flaw? Do I need to setup secure authentication if we are only enabling local access to JMX?Is anyone using the same (tomcat + lambda probe) without problems on production?UPDATELooking at the answers it seems that enabling JMX alone doesn't incur significant overhead to the VM. The extra work may come if the monitoring application attached to the VM, be it JConsole, lambda probe or any other, is polling with excessive dedication.Cannot generate key in Android keystoreWe are currently experiencing an issue where sometimes when a user installes our app, the app tries to access and generate a key in the keystore but the keystore throws this exception:We think it has to do with the unlock pattern off the phone does not unlock the keystore, and/or a device administrator locks the keystore. This is how the keystore is created and how the keys are generated:Does anyone know how to:Lock the keystore as an device administrator?Unlock the keystore when it has been locked by a device administrator?Or reproduce this issue in another way?Warning on Permissions attribute when running an applet with JRE 7u45However the warning message didn't disappear. I doubt that I'm missing some other things, but can't find them out after hours of research. Anybody else knows the solution?UpdateTrusted applet that is signed with a valid certificate can't run either. The yellow warning message doesn't show up but another error dialog is displayed saying the applet is blocked by the security settings, while changing the security level or something else in Java Control Panel doesn't help.why `java.lang.SecurityException: Prohibited package name: java` is required?I created a class "String" and placed that in package "java" [ actually i wanted to create java.lang to see which class is loaded by classLoader as quoted from oreilly ] . But that thing later, why on running this class i am gettingjava  For which security reason java is not allowing me to have a class in java package? What one could do if there will not be no such check?Is it possible to store secrets on the stack in java?In Java the old way of storing a secret, such as a password, was to use char[] as you could overwrite its data when you were done with it. However this has since been shown to be insecure as the garbage collector will copy things around as it reorganizes the heap. On certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page.This is horribly ugly, but what if the secret were stored on the stack of a Thread's run method? Care would still need to be taken to terminate the thread gracefully, so that it could zero out its data, but this problem was present in the old way as well.One major problem I see straight away is that I can't think of a safe way to get data in and out of the container. You could minimize the likelihood of a leaked secret by using streams with very small internal buffers, but in the end you wind up with the same problem as char[]. [Edit: Would a single private static byte member and a flag work? Although that would limit you to one secret per ClassLoader. This adds more ugliness, but it might be easy enough to hide behind a well-written interface.]So I have a bunch of questions, really.Is the stack any more secure from these types of attacks than the heap? Are there any pure Java mechanisms to perform a stack-to-stack copy between two different stack frames in a manner that would be useful to this problem? If not, would the JVM even support this type of operation in bytecode?[Edit: Before people worry too much, this is more of a thought experiment than anything else. I have absolutely no intention of 'testing in production' or using it in any current project. I realize that what I'm talking about is really ugly, probably horribly bulky, and works against the entire JVM structure. I'm just interested in whether it's possible, whether it actually accomplishes my goals, and what kinds of heroics it would take to make it happen.]How to store and load keys using java.security.KeyStore classAfter creating secret keys, how do I store them using the Keystore class' methods and how do I load the keys?Java and c++ encrypted results not matchingSome of the encrypted strings are matching  . Some are mismatching in one or two characters. I am  unable to figure out why it is happening. I ran both the codes in debug mode  until they call their libraries both have the same key, salt, iv  string to be encrypted.I know that even if a single byte padding change will modify encrypted string drastically. But here I am just seeing a one or two characters change. Here is a sample (Bold characters in between stars is the part mis matching)java:      U2FsdGVkX18xMjM0NTY3OGEL9nxFlHrWvodMqar82NT53krNkqat0rrgeV5FAJFs1vBsZIJPZ08DJVrQ*Pw*yV15HEoyECBeAZ6MTeN+ZYHRitKanY5jiRU2J0KP0FzolaC++:     U2FsdGVkX18xMjM0NTY3OGEL9nxFlHrWvodMqar82NT53krNkqat0rrgeV5FAJFs1vBsZIJPZ08DJVrQ*jQ*yV15HEoyECBeAZ6MTeN+ZYHRitKanY5jiRU2J0KP0FzolaI am using AES encryption.  provider is SunJCE version 1.6. I tried changing provider to Bouncy Castle. Even then result is same. Added One More sample:C++:  U2FsdGVkX18xMjM0NTY3O*I*/BMu11HkHgnkx+dLPDU1lbfRwb+aCRrwkk7e9dy++MK+/94dKLPXaZDDlWlA3gdUNyh/Fxv*oF*STgl3QgpS0XU=java:U2FsdGVkX18xMjM0NTY3O*D*/BMu11HkHgnkx+dLPDU1lbfRwb+aCRrwkk7e9dy++MK+/94dKLPXaZDDlWlA3gdUNyh/Fxv*j9*STgl3QgpS0XU=UPDATE:As per the comments I feel base 64 encryption is the culprit. I am using Latin-1 char set in both places. Anything else that I can checkHow to properly logout of a Java EE 6 Web Application after logging inA pretty simple requirement. After logging into web J2EE 6 application, how can I have the user logout again? Most (all?) the books and tutorials I have seen show how to add a login/loginerror page to their application and demonstrate the use of security principals/roles/realms etc using the "j_security_check" method - all good. But then it's not clear how to give the user the power to logout. Indeed, how can I force a logout after, say, the session times out, etc?Making Android Keyboard Resilient against KeyLogger attacksBeing a victim of a Key Logger attack on android, I want to develop a solution for KeyLogger attacks for android. I know basic java and a little about android and very little about Information Security. I am also aware that whatever knowledge I have is not enough to figure out and to develop a solution. I just like to discuss my idea and to see if it is feasible. Here is what I have:An android application, which wants to secure user input, must provide a secret key(which can be obtained from server, for a specific user or session) when invoking the android keyboard.Android keyboard will receive the secret key and use it to encrypt user input and broadcast KEYPRESS event(or whatever event android keyboard broadcasts) with encrypted value.When an application receives KEYPRESS event, it decrypt's the value in KEYPRESS even to get the actual user input.I just came to realize that, screenshot can be used to get what user types with latest image-2-text software's. But that is completely a different domain, IMHO. So, what do you think about it? Is it possible to do it?UpdateI was completely wrong about my phone got owned. Actually, it was never got hacked. But, what really got hacked was me. Yes, I have something in my body, which just copies everything that my brain can receive. And it also capable of receiving and making my brain to do it. I still dont know, why I am able to write this update. May be, who ever put that thing in my body using me as a marketing material. Thanks for answers for my dumb question.Oracle Java 8 x64 for Linux and RandomSourceI really thought that after about 200 or more tomcat installs on various platforms, I am ready for any kind of challenge but this one is tricky.I created a vanilla Ubunutu 14_04 image and installed Java 8 TGZ from oracle on that system. Furthermore I added a tomcat 8 to the game. Then I started the vanilla server install.Soon after hanging on deploying the default apps shipped with tomcat, I wondered whats happening there and did some threaddumps. This one was the lousy thread who prevented tomcat from starting:After more google &amp; friends i discovered that the SeedGenerator shipped with the JDK is the source of my problem. Interestingly sometimes the SeedGenerator came back after several minutes and sometimes it just hung (running out of entropy? ... checked via cat /proc/sys/kernel/random/entropy_avail) . After more research I found out that a config variable in $JAVA_HOME$/lib/security/java.security called securerandom.source defines what the source for Random is. In my case, or better in the oracle JDK 8 install for linux, it was /dev/random. I am not a Linux expert (I am a java developer) but what I understood is that /dev/random can run out of entropy (whatever this means) but perhaps it means at some point it cant generate any more random numbers). I switched to /dev/urandom and everything was fine with my tomcat.Then i checked how other JDK installs look like on my other various server, which were a wild mix of OpenJDK and older Oracle JDK installs. At least OpenJDK always used /dev/urandom what might be the answer, why I have never had the problem before.Now to my question: Is it sane from Oracle to rely on /dev/random when there can be corner cases where the OS cant produce any more numbers? I mean servers like Tomcat and many others rely on SeedGenerator from the JDK and debugging this kind of error is really advanced. Took me 2 hours to get to the point where i am now.Spring security with Oauth2 or Http-Basic authentication for the same resourceI'm attempting to implement an API with resources that are protected by either Oauth2 OR Http-Basic authentication.When I load the WebSecurityConfigurerAdapter which applies http-basic authentication to the resource first, Oauth2 token authentication is not accepted. And vice-versa.Example configurations:This applies oauth token protection to the /user/** resourceI'm sure there is some piece of magic code I'm missing which tells spring to attempt both if the first has failed?Any assistance would be most appreciated.Run local java applet in browser (chrome/firefox) "Your security settings have blocked a local application from running"I'm trying to run a Java Applet (html file), but the browser keeps saying: "Your security settings have blocked a local application from running"I have tried using Chrome and Firefox but i get the same error. I have upgraded to the latest version of Java, but Chrome still says in chrome://plugins/ "Download Critical Security Update"even though i can run Java applets (not locally)Im using Ubuntu 13.04 64 bitjavax.security.cert.X509Certificate vs java.security.cert.X509Certificate?Did you spot the difference in the title? (for me, it took some time)So I used bouncy castle with connection to java.security.cert.X509Certificatejava.security.cert.X509Certificatejava.security.cert.X509Certificatejavax.security.cert.X509Certificate. The problem is I cannot cast a javax.security.cert.X509Certificate to java.security.cert.X509Certificate.Any ideas on what to do, to transform raw bytes into a java.security.cert.X509Certificate?Also, what's the differences between the one abstract class and the other class? Why does java has two of them with different functionality?Spring Security: how to implement Brute Force Detection (BFD)?My web applications security is handled by  Spring Security 3.02 but I can't find any out of the box support for Brute Force Detection.I would like to implement some application level BFD protection. For example by storing failed login attempt per user in the database (JPA). The attacked user accounts could then get a lockout period or a forced account re-activation by e-mail.What's the best way to implement this with Spring Security? Does any body have example code or best practices on this?Is there a reason why software developers aren't externalizing authorization?The value proposition of externalizing identity is starting to increase where many sites now accept OpenID, CardSpace or federated identity. However, many developers haven't yet taken the next step to externalize authorization and use approaches based on XACML.Is the reason lack of awareness or something else? How would you expect to learn about XACML-based approaches to software development?Please note that I am asking about authorization, not authentication.AccessController.doPrivilegedI am trying to figure out what some legacy code is doing. What exactly is this line doing, and why would I need it this way?I found it in the logger implementation of the web/ejb application running on Weblogic 8. There are no special security policies enabled as far as I know. (I do not like imports from sun.* packages, so I want to get rid of this line ;-)Spring security with Oauth2 or Http-Basic authentication for the same resourceI'm attempting to implement an API with resources that are protected by either Oauth2 OR Http-Basic authentication.When I load the WebSecurityConfigurerAdapter which applies http-basic authentication to the resource first, Oauth2 token authentication is not accepted. And vice-versa.Example configurations:This applies oauth token protection to the /user/** resourceI'm sure there is some piece of magic code I'm missing which tells spring to attempt both if the first has failed?Any assistance would be most appreciated.How to create a authentication token using JavaOn my Java EE6, REST service, I want to use authentication tokens for login from mobile devices, User will send their username, password and server will send back a token, which will be used to authorize the user on their further requests for a given time.Can I simply create a token myself like this?(I guess I do not need to encrypt this since I will use HTTPS.)Or there is a more standart way to create my tokens? maybe it exists in one of API'sjava.security.AccessControlException: Access denied (java.io.FilePermissionI am trying to create a file in a folder but I am getting exception as I am working in windows environment.  I can create a folder from the Windows Explorer, but not from the Java Code. How can I resolve this issue?